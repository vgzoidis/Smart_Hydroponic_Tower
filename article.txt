3. Results
The Smart Hydroponic Tower system was successfully assembled and tested. The system demonstrated reliable and autonomous operation, maintaining the set parameters for the hydroponic environment.

3.1. Real-time Monitoring and Control
The local TFT display provided a clear and immediate overview of the system's status, with color-coded indicators for each sensor reading. The web interface and the mobile application both allowed for successful remote monitoring and control of the system. Users were able to view live sensor data and manually operate the pumps from a web browser or the Android app.

3.2. Automated Systems
The automated pump cycling and pH control systems functioned as designed. The circulation pump correctly followed its on/off schedule, and the pH control system was able to maintain the pH of the nutrient solution within the specified target range. The system's logic successfully prevented the pumps from operating when the water level was low, protecting them from damage.

3.3. Data Logging and Visualization
The system successfully logged data to the Supabase cloud database at regular intervals. The mobile application's plotting screen was able to retrieve and display this data, providing valuable insights into the historical performance of the system and the growing conditions of the plants.

3.4. System Visualization
The project includes a variety of visual materials that document its construction and operation. These include screenshots of the mobile application (Figure 2), photos of the custom PCB (Figure 1), and images of the fully assembled system.

Figure 1. The custom-designed PCB for the Smart Hydroponic Tower. (a) 3D Render; (b) Assembled PCB.

Figure 2. The Smart Hydroponic Tower mobile application. (a) The dashboard screen showing real-time data; (b) The plotting screen showing historical data.

4. Discussion
The Smart Hydroponic Tower project successfully demonstrates the application of IoT technologies to automate and optimize hydroponic agriculture. By integrating a range of sensors and actuators with an ESP32 microcontroller, the system provides a comprehensive solution for monitoring and controlling the key parameters of a hydroponic environment.

The use of a mobile application for remote management significantly enhances the user experience, allowing for convenient access to real-time data and control functions. The cloud-based data logging provides a powerful tool for data analysis, enabling growers to make informed decisions and optimize their cultivation strategies over time.

The modular design of both the hardware and software makes the system flexible and extensible. Future work could involve the integration of additional sensors (e.g., for specific nutrient ions), the development of more sophisticated control algorithms (e.g., using machine learning to predict plant needs), and the expansion of the mobile application to include features like push notifications for alerts and more advanced data analysis tools.

5. Conclusions
This paper has presented a low-cost, IoT-based Smart Hydroponic Tower that automates the process of plant growth monitoring and control. The system, which includes a custom PCB, an ESP32-based control unit, and a React Native mobile application, provides a practical and effective solution for maintaining optimal growing conditions in a hydroponic setup. The successful implementation and testing of the system highlight the potential of IoT technologies to revolutionize agriculture, making it more efficient, data-driven, and accessible.

Author Contributions: Conceptualization, E.P.; methodology, V.Z.; software, V.Z.; validation, V.Z.; formal analysis, V.Z.; investigation, V.Z.; resources, E.P.; data curation, V.Z.; writing—original draft preparation, V.Z.; writing—review and editing, V.Z. and S.P.; visualization, V.Z.; supervision, S.P.; project administration, E.P. All authors have read and agreed to the published version of the manuscript.

Funding: This research received no external funding.

Data Availability Statement: The data presented in this study are available on request from the corresponding author. The source code for the ESP32 firmware and the React Native application is available in the project's GitHub repository.
